{
  // backend
  //
  // configuration of the communication channel between the proxy and Kuzzle.
  // by default, if bound to *:7331
  // options:
  //   [port]:    TCP port to listen to for incoming connections from Kuzzle
  //   [host]:    ip on which the proxy should bind itself. Defaults to all interfaces
  //   [socket]:  use a unix socket as transport
  // NB: Either port or socket must be defined
  "backend": {
    "port": 7331,
    "mode": "standard",
    "timeout": 10000
  },
  // Logs section
  "logs": {
    "access": {
      "transport": "console",
      "level": "info",
      "stderrLevels": [],
      "silent": true,
      "format": "simple"
    },
    "error": {
      "transport": "console",
      "level": "info",
      "stderrLevels": ["warn", "error", "debug"]
    },
    // The format of the access logs. Default to Apache combined format
    // Accepted values: "combined" or "logstash"
    // If set to "logstash", outputs access logs as JSON, ready to be consumed by Logstash
    "accessLogFormat": "combined",
    // The offset of the ip address to take from the X-Forwarded-Host headers from the end.
    // Defaults to 0, being the last ip address set in the header.
    // You may want to change this value if Kuzzle is running behind a reverse proxy
    "accessLogIpOffset": 0
  },
  // The size limit of a request. If it's a string, the
  //       value is passed to the "bytes" library (https://www.npmjs.com/package/bytes).
  //       If this is a number, then the value specifies the number of bytes.
  "maxRequestSize": "1MB",
  // ip on which the proxy should bind itself for http connections. Defaults to all interfaces
  "host": "0.0.0.0",
  // http proxy
  //
  // configuration of the http proxy server for Kuzzle
  // options
  //   * enabled: true/false (if http is disabled, the server will be started only
  //     websocket and socketio protocols). Default to "true"
  //   * maxFormFileSize: the size limit of a file (for upload requests). If it's a
  //     string, the value is passed to the "bytes" library
  //     (https://www.npmjs.com/package/bytes).
  //     If this is a number, then the value specifies the number of bytes.
  //   * maxEncodingLayers:
  //     Maximum number of encoding layers that can be applied
  //     to an http message, using the Content-Encoding header.
  //     This parameter is meant to prevent abuses by setting an
  //     abnormally large number of encodings, forcing Kuzzle to
  //     allocate as many decoders to handle the incoming request.
  //   * allowCompression:
  //     Enable support for compressed requests, using the
  //     Content-Encoding header
  //     Currently supported compression algorithms: gzip, deflate, identity
  //     Note: "identity" is always an accepted value, even if
  //     compression support is disabled
  "http": {
    "enabled": true,
    "maxFormFileSize": "1MB",
    "allowCompression": true,
    "maxEncodingLayers": 3
  },
  // TCP port to listen to
  "port": 7512,
  // socketio protocols
  //
  // configuration of the socketio protocol for Kuzzle (uses http server)
  // options
  //   enabled: true/false. Default to "true"
  //   orgins: Sets the allowed origins. Default to any origins being allowed
  "socketio": {
    "enabled": true,
    "origins": "*:*"
  },
  // websocket protocols
  //
  // configuration of the websocket protocol for Kuzzle (uses http server)
  // options
  //   enabled: true/false. Default to "true"
  "websocket": {
    "enabled": true
  }
}
